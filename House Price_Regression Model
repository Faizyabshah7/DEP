
import matplotlib.pyplot as plt
import pandas as pd
import pylab as pl
import numpy as np
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from sklearn import linear_model
from sklearn.metrics import mean_squared_error,r2_score

path = r"C:\Users\A.H\OneDrive\Desktop\housePrice.csv"
pd = pd.read_csv(path, sep=',', encoding="ISO-8859-1", header=0)

pd.head()

pd.shape
pd.info

pd['Area']=pd['Area'].apply(lambda X:int(X.replace(',','')))
sns.pairplot(pd,diag_kind='kde')

sns.heatmap(pd.corr(),annot=True,cmap='Greens')
pd.isnull()

pd.isnull().sum()
sns.heatmap(pd.isnull(),yticklabels=False,cbar=False)


def missing_percent(pd):
    nan_percent = 100*(pd.isnull().sum()/len(pd))
    nan_percent = nan_percent[nan_percent>0].sort_values()
    return nan_percent

nan_percent=missing_percent(pd)

nan_percent


nan_percent[nan_percent<1]

nan_percent[nan_percent<1].index


plt.scatter(pd.Room,pd.Price,color='blue')
plt.xlabel("Price")
plt.ylabel("Room")
plt.show()



pd = pd.get_dummies(pd['Address'])
pd = pd.concat([pd,pd],axis=1)
pd = pd.drop('Address',axis=1)
msk = np.random.rand(len(pd))<0.8
train = pd[msk]
test = pd[~msk]
plt.scatter(train.Room , train.Price,color = 'blue')
plt.xlabel("Price")
plt.ylabel("Room")
plt.show()



regr = linear_model.LinearRegression()
x = train.drop('Price',axis = 1)
y = train[['Price']]

regr.fit(x,y)
print('coefficients:',regr.coef_)
